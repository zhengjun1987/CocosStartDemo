{"version":3,"sources":["assets/scripts/game.js"],"names":["cc","Class","Component","properties","starPrefab","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","update","dt","log","Date","now","onLoad","score","timer","groundY","y","height","spawnNewStar","gainScore","string","newStar","instantiate","starDuration","Math","random","node","addChild","setPosition","getNewStarPosition","getComponent","game","randX","randY","jumpHeight","maxX","width","v2","gameOver","director","loadScene"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 这个属性引用了星星预制资源\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: cc.Node\n        },\n\n        scoreDisplay: {\n            default: null,\n            type: cc.Label,\n        }\n    },\n\n    update: function (dt) {\n        cc.log('Update:' + Date.now());\n    },\n\n    onLoad: function () {\n        // 初始化计分\n        this.score = 0;\n        // 初始化计时器\n        this.timer = 0;\n        // 获取地平面的 y 轴坐标\n        this.groundY = this.ground.y + this.ground.height / 2;\n        // 生成一个新的星星\n        this.spawnNewStar();\n    },\n\n    gainScore: function () {\n        this.score += 1;\n        // 更新 scoreDisplay Label 的文字\n        this.scoreDisplay.string = 'Score: ' + this.score;\n    },\n\n    spawnNewStar: function () {\n        // 使用给定的模板在场景中生成一个新节点\n        var newStar = cc.instantiate(this.starPrefab);\n        // 初始化计时器\n        this.timer = 0;\n        // 重置计时器，根据消失时间范围随机取一个值\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        // 将新增的节点添加到 Canvas 节点下面\n        this.node.addChild(newStar);\n        // 为星星设置一个随机位置\n        newStar.setPosition(this.getNewStarPosition());\n        // 在星星组件上暂存 Game 对象的引用\n        newStar.getComponent('Star').game = this;\n    },\n\n    getNewStarPosition: function () {\n        var randX = 0;\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\n        var maxX = this.node.width / 2;\n        randX = (Math.random() - 0.5) * 2 * maxX;\n        // 返回星星坐标\n        return cc.v2(randX, randY);\n    },\n\n    update:function (dt) {\n        if(this.timer > this.starDuration){\n            this.gameOver();\n            return;\n        }\n        this.timer += dt;\n    },\n\n    gameOver:function () {\n        this.player.getComponent('Player').gameOver();\n        cc.director.loadScene('game');\n    }\n});\n"]}